import java.io.*;
import java.util.*;

// Employee class must be Serializable
class Employee implements Serializable {
    private static final long serialVersionUID = 1L;
    
    private int id;
    private String name;
    private String designation;
    private double salary;

    // Constructor
    public Employee(int id, String name, String designation, double salary) {
        this.id = id;
        this.name = name;
        this.designation = designation;
        this.salary = salary;
    }

    // toString method for displaying employee details
    @Override
    public String toString() {
        return "Employee [ID=" + id + ", Name=" + name + 
               ", Designation=" + designation + ", Salary=" + salary + "]";
    }
}

public class EmployeeManagementSystem {
    private static final String FILE_NAME = "employees.ser";

    // Method to add an employee
    public static void addEmployee(Employee emp) {
        List<Employee> employees = readEmployees(); // load existing employees
        employees.add(emp);

        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(FILE_NAME))) {
            out.writeObject(employees);
            System.out.println("âœ… Employee added successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Method to read all employees from file
    @SuppressWarnings("unchecked")
    public static List<Employee> readEmployees() {
        List<Employee> employees = new ArrayList<>();
        File file = new File(FILE_NAME);

        if (!file.exists()) {
            return employees; // return empty list if file doesn't exist
        }

        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(FILE_NAME))) {
            employees = (List<Employee>) in.readObject();
        } catch (IOException | ClassNotFoundException e) {
            // ignore if file is empty or corrupted
        }
        return employees;
    }

    // Method to display all employees
    public static void displayEmployees() {
        List<Employee> employees = readEmployees();
        if (employees.isEmpty()) {
            System.out.println("âš  No employee records found.");
        } else {
            System.out.println("\n--- Employee Records ---");
            for (Employee emp : employees) {
                System.out.println(emp);
            }
        }
    }

    // Main method with menu
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n===== Employee Management System =====");
            System.out.println("1. Add Employee");
            System.out.println("2. Display All Employees");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();
            sc.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    // Input employee details
                    System.out.print("Enter Employee ID: ");
                    int id = sc.nextInt();
                    sc.nextLine(); // consume newline

                    System.out.print("Enter Name: ");
                    String name = sc.nextLine();

                    System.out.print("Enter Designation: ");
                    String designation = sc.nextLine();

                    System.out.print("Enter Salary: ");
                    double salary = sc.nextDouble();

                    // Create and add employee
                    Employee emp = new Employee(id, name, designation, salary);
                    addEmployee(emp);
                    break;

                case 2:
                    displayEmployees();
                    break;

                case 3:
                    System.out.println("ðŸ‘‹ Exiting program. Goodbye!");
                    break;

                default:
                    System.out.println("âš  Invalid choice. Try again.");
            }
        } while (choice != 3);

        sc.close();
    }
}
